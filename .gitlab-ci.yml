image: mwm126/mfix-exa:cuda

variables:
  AMREX_HOME: "${CI_PROJECT_DIR}/amrex_install"
  CC: "gcc"
  CXX: "g++"
  ENABLE_MPI: "1"
  ENABLE_OMP: "0"
  FC: "gfortran"
  GIT_DEPTH: 1
  GIT_STRATEGY: fetch
  GIT_SUBMODULE_STRATEGY: normal
  JOULE_MODULES: "cuda/10.2 gnu/8.4.0 openmpi/4.0.3_gnu8.4 ccache/3.7.9"

###### Test jobs #####

.test_job: &test_template
  artifacts:
    name: "$CI_JOB_NAME"
    expire_in: 1 week
    when: on_failure
    paths:
      - build/Testing/

.cpu_test: &cpu_template
  only:
    - develop
  script:
    - git submodule update --init
    - cmake -S .
            -B build
            -DENABLE_MPI=$ENABLE_MPI
            -DENABLE_OMP=$ENABLE_OMP
    - cmake --build build --target build_tests -j2 --verbose
    - cd build
    - $CTEST_CMD
  tags:
    - mfix-exa
  <<: *test_template

.gpu_test: &gpu_template
  script:
    - module load $JOULE_MODULES
    - git submodule update --init --force
    - cmake -S .
            -B build
            -G Ninja
            -DENABLE_CUDA=1
            -DENABLE_MPI=$ENABLE_MPI
            -DENABLE_OMP=$ENABLE_OMP
    - cmake --build build --target build_tests -j2
    - cd build
    # - $CTEST_CMD
  tags:
    - joule
  <<: *test_template


#  CPU tests

single-grid-serial-cpu:
  variables:
    CTEST_CMD: "srun ctest -R SGS"
  <<: *cpu_template

multiple-grid-serial-cpu:
  variables:
    CTEST_CMD: "srun ctest -R MGS"
  <<: *cpu_template

tiled-grid-serial-cpu:
  variables:
    CTEST_CMD: "srun ctest -R TGS"
  <<: *cpu_template

multiple-grid-parallel-cpu:
  variables:
    CTEST_CMD: "srun ctest -R MGP"
  <<: *cpu_template

tiled-grid-parallel-openmp-cpu:
  variables:
    ENABLE_MPI: "0"
    ENABLE_OMP: "1"
    CTEST_CMD: "srun ctest -R TGP"
  <<: *cpu_template


#  GPU tests

single-grid-serial-gpu:
  variables:
    CTEST_CMD: "srun ctest -R SGS"
  <<: *gpu_template

.multiple-grid-serial-gpu:
  variables:
    CTEST_CMD: "srun ctest -R MGS"
  <<: *gpu_template

.tiled-grid-serial-gpu:
  variables:
    CTEST_CMD: "srun ctest -R TGS"
  <<: *gpu_template

.multiple-grid-parallel-gpu:
  variables:
    CTEST_CMD: "srun ctest -R MGP"
  <<: *gpu_template

.tiled-grid-parallel-openmp-gpu:
  variables:
    ENABLE_MPI: "0"
    ENABLE_OMP: "1"
    CTEST_CMD: "srun ctest -R TGP"
  <<: *gpu_template

linter:shellcheck:
  script:
    - wget https://storage.googleapis.com/shellcheck/shellcheck-stable.linux.x86_64.tar.xz
    - tar xf shellcheck-stable.linux.x86_64.tar.xz
    - find . -name "*.sh" -not -path "./subprojects/*" | xargs shellcheck-stable/shellcheck -e SC2086,SC2125,SC2046,SC2129,SC2044
  tags:
    - mfix-exa
  allow_failure: true

linter:warnings:
  script:
    - cmake -S . -B build -DCMAKE_CXX_FLAGS="-O0 -Werror=unused -Werror=maybe-uninitialized" -DCMAKE_Fortran_FLAGS="-O0"
    - cmake --build build -- -j4 -k
  tags:
    - mfix-exa
  allow_failure: true

linter:spelling:
  image: python:3.7.5-buster
  script:
    - rm -rf subprojects
    - python -m pip install codespell
    - codespell --ignore-words-list ba,blocs,ith,od,wen --enable-colors --quiet-level 2
  allow_failure: true
  except:
    - schedules
  tags:
    - mfix-exa

.test:regression:
  image: mwm126/mfix-exa:py3
  tags:
    - mfix-exa
  script:
    - python3 subprojects/mfix_regression_testing/regtest.py subprojects/mfix_regression_testing/MFIX-tests.ini
  tags:
    - mfix-exa

test:make-regression-benchmark:
  when: manual
  image: mwm126/mfix-exa:py3
  tags:
    - mfix-exa
  script:
    - rm -rf subprojects/mfix_regression_testing/top_test_dir
    - python3 subprojects/mfix_regression_testing/regtest.py --make_benchmarks "MFIX" subprojects/mfix_regression_testing/MFIX-tests.ini
  artifacts:
    name: "$CI_JOB_NAME"
    expire_in: 1 week
    paths:
      - subprojects/mfix_regression_testing/top_test_dir
  tags:
    - mfix-exa
