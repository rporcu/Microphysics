image: hello-world:latest

stages:
  - build-img
  - test

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID               # Execute jobs in merge request context
    - if: $CI_COMMIT_BRANCH == 'develop'     # Execute jobs when a new commit is pushed to master branch

variables:
  CC: gcc
  CXX: g++
  ENABLE_MPI: 1
  ENABLE_OMP: 0
  FC: gfortran
  GIT_DEPTH: 100
  GIT_STRATEGY: fetch
  GIT_SUBMODULE_STRATEGY: none

build-test-env:
  stage: build-img
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --cache=true --context $CI_PROJECT_DIR --dockerfile ./Dockerfile --destination $CI_REGISTRY_IMAGE:latest
  tags:
    - docker


###### Test jobs #####

.test: &test_template
  stage: test
  image: $CI_REGISTRY_IMAGE:latest
  needs: ['build-test-env']
  artifacts:
    name: $CI_JOB_NAME
    expire_in: 1 week
    when: on_failure
    paths:
      - build/Testing/
  tags:
    - docker

test:csg:
  <<: *test_template
  script:
    - git submodule update --init --force
    - cmake -S .
            -B build
            -G Ninja
            -DCMAKE_BUILD_TYPE=Debug
            -DMFIX_CSG=yes
    - cmake --build build --target functional_tests
    - ./build/src/eb/tests/functional_tests
  allow_failure: true

.ctest: &ctest_template
  image: $CI_REGISTRY_IMAGE:latest
  script:
    - git submodule update --init --force subprojects/amrex
    - cmake -S .
            -B build
            -DMFIX_MPI=$ENABLE_MPI
            -DMFIX_OMP=$ENABLE_OMP
            -G Ninja
    - cmake --build build --target build_tests
    - cd build
    - $CTEST_CMD
  <<: *test_template

.build:gpu: &build_gpu
  stage: test
  needs: []
  script:
    - module load cmake/3.19.1 ccache/3.7.9 gnu/8.4.0 openmpi/4.0.3_gnu8.4 $CUDA_MODULE
    - git submodule update --init --force
    - cmake -S .
            -B build
            -DAMReX_CUDA_ARCH=Volta
            -DMFIX_CSG=yes
            -DMFIX_GPU_BACKEND=CUDA
            -DMFIX_MPI=$ENABLE_MPI
            -DMFIX_OMP=$ENABLE_OMP
    - cmake --build build --target build_tests
  tags:
    - joule

build:cuda-10.1:
  variables:
    CUDA_MODULE: cuda/10.1
  <<: *build_gpu

build:cuda-10.2:
  variables:
    CUDA_MODULE: cuda/10.2
  <<: *build_gpu

build:cuda-11.0:
  variables:
    CUDA_MODULE: cuda/11.0
  <<: *build_gpu

test:single-serial:
  variables:
    CTEST_CMD: srun ctest -R SGS
  <<: *ctest_template

test:multiple-serial:
  variables:
    CTEST_CMD: srun ctest -R MGS
  <<: *ctest_template

test:tiled-serial:
  variables:
    CTEST_CMD: srun ctest -R TGS
  <<: *ctest_template

test:multiple-parallel:
  variables:
    CTEST_CMD: srun ctest -R MGP
  <<: *ctest_template

test:tiled-parallel-openmp:
  variables:
    ENABLE_MPI: 0
    ENABLE_OMP: 1
    CTEST_CMD: srun ctest -R TGP
  <<: *ctest_template


linter:shellcheck:
  stage: test
  image: $CI_REGISTRY_IMAGE:latest
  script:
    - find . -name "*.sh" -not -path "./subprojects/*" | xargs shellcheck -e SC2086,SC2125,SC2046,SC2129,SC2044
  tags:
    - docker
  allow_failure: true

linter:warnings:
  stage: test
  image: $CI_REGISTRY_IMAGE:latest
  needs: ['build-test-env']
  script:
    - cmake -S . -B build -DCMAKE_CXX_FLAGS="-Wall -Werror" -GNinja
    - cmake --build build -- -k0
  tags:
    - docker
  allow_failure: true

linter:spelling:
  stage: test
  image: $CI_REGISTRY_IMAGE:latest
  needs: ['build-test-env']
  script:
    - rm -rf subprojects
    - codespell --ignore-words-list ba,blocs,inout,ith,od,wen --enable-colors --quiet-level 2
  allow_failure: true
  except:
    - schedules
  tags:
    - docker
